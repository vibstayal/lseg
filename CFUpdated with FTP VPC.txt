{
  "AWSTemplateFormatVersion": "2010-09-09",
 
"Metadata" : {
  "AWS::CloudFormation::Interface" : {
    "ParameterGroups" : [
      {
        "Label" : { "default" : "Global Name" },
        "Parameters" : [ "ApplicationName", "EnvironmentType" ]
      },
      {
        "Label" : { "default":"Network Configuration" },
        "Parameters" : [ "PublicSubnetAZ", "PrivateSubnetAZ","DBPrivateSubnetAZ","FTPPublicSubnetAZ" ]
      },


{
        "Label" : { "default":"Ec2 Configuration" },
        "Parameters" : [ "InstanceType","KeyName","JumpHostRDP" ]
      },

{
        "Label" : { "default":"Database Configuration" },
        "Parameters" : [ "DBUsername", "DBPassword","DBInstanceClass"]
      }



    ]
     }
},




"Parameters" : {

 "ApplicationName": {
      "Description": "The Application Name",
      "Type": "String",
      "Default": "RnR",
      "AllowedPattern" : "[a-zA-Z][a-zA-Z0-9]*",
      "ConstraintDescription": "Must begin with a letter and contain only alphanumeric characters."
    },

"PublicSubnetAZ":{
 "Description": "Select AZ for your Public Subnet", 
 "Type" : "AWS::EC2::AvailabilityZone::Name",
"ConstraintDescription" : "Must select AZ from drop-down."

},
"FTPPublicSubnetAZ":{
 "Description": "Select AZ for your FTP Public Subnet", 
 "Type" : "AWS::EC2::AvailabilityZone::Name",
"ConstraintDescription" : "Must select AZ from drop-down."

},
"PrivateSubnetAZ":{
 "Description": "Select AZ for your Private Subnet", 
 "Type" : "AWS::EC2::AvailabilityZone::Name",
"ConstraintDescription" : "Must select AZ from drop-down."


},
"DBPrivateSubnetAZ":{
 "Description": "Select AZ for your DB PrivateSubnet that is different from Private Subnet to make DB Multi-AZ", 
 "Type" : "AWS::EC2::AvailabilityZone::Name",
"ConstraintDescription" : "Must select AZ from drop-down."


},


 "EnvironmentType": {
      "Description": "The environment type",
      "Type": "String",
      "Default": "Test",
      "AllowedPattern" : "[a-zA-Z][a-zA-Z0-9]*",
      "ConstraintDescription": "Must begin with a letter and contain only alphanumeric characters."
    },

    "KeyName" : {
	"Description": "Select Existing Key for Ec2 Instances",
      "Type" : "AWS::EC2::KeyPair::KeyName",
	"Default" : "RnRC",
      "ConstraintDescription" : "Must be the name of an existing EC2 KeyPair."
    },

    "InstanceType" : {
 "Description": "For WebTier and AppTier",
      "Type" : "String",
      "Default" : "t2.micro",
      "AllowedValues" : [ "t1.micro", "t2.micro", "t2.small", "t2.medium", "m1.small", "m1.medium", "m1.large", "m1.xlarge", "m2.xlarge", "m2.2xlarge", "m2.4xlarge", "m3.medium", "m3.large", "m3.xlarge", "m3.2xlarge", "m4.large", "m4.xlarge", "m4.2xlarge", "m4.4xlarge", "m4.10xlarge", "c1.medium", "c1.xlarge", "c3.large", "c3.xlarge", "c3.2xlarge", "c3.4xlarge", "c3.8xlarge", "c4.large", "c4.xlarge", "c4.2xlarge", "c4.4xlarge", "c4.8xlarge", "g2.2xlarge", "r3.large", "r3.xlarge", "r3.2xlarge", "r3.4xlarge", "r3.8xlarge", "i2.xlarge", "i2.2xlarge", "i2.4xlarge", "i2.8xlarge", "d2.xlarge", "d2.2xlarge", "d2.4xlarge", "d2.8xlarge", "hi1.4xlarge", "hs1.8xlarge", "cr1.8xlarge", "cc2.8xlarge", "cg1.4xlarge"]
,
      "ConstraintDescription" : "Must be a valid EC2 instance type."
    },

"JumpHostRDP" : {
      "Description" : "The IP address that can RDP to Jump Host and FTPService EC2 instance",
      "Type": "String",
      "MinLength": "9",
      "MaxLength": "18",
      "Default": "0.0.0.0/0",
"ConstraintDescription" : "Must contain atleast one IP Address."
    },

 "DBUsername" : {
 	"Default": "admin",
 	"NoEcho": "false",
 	"Description" : "The Database username",
 	"Type": "String",
 	"MinLength": "1",
 	"MaxLength": "16",
 	"AllowedPattern" : "[a-zA-Z][a-zA-Z0-9]*",
 	"ConstraintDescription" : "must begin with a letter and contain only alphanumeric characters."
 },
 "DBPassword" : {
 	"NoEcho": "true",
 	"Description" : "The Database password",
	"Type": "String",
 	"MinLength": "8",
 	"MaxLength": "41",
 	"AllowedPattern" : "[a-zA-Z0-9]*",
 	"ConstraintDescription" : "must contain only alphanumeric characters."
 },
"DBInstanceClass" : {
 "Description": "SQL Server EE Instance Type",
      "Type" : "String",
      "Default" : "db.r3.2xlarge",
      "AllowedValues" : [ "db.r3.2xlarge", "db.r3.4xlarge", "db.r3.8xlarge"],
      "ConstraintDescription" : "Select DB instance type from Drop-down."
    }
},
"Mappings" : {
    
    "AWSRegionArch2AMI" : {
      "us-east-1": {
        "Windows2012r2": "ami-abf616bd"
      },
      "us-west-2": {
        
        "Windows2012r2": "ami-1562d075"
      },
      "us-west-1": {

        "Windows2012r2": "ami-76227116"
      },
      "eu-west-1": {
        "Windows2012r2": "ami-dd9eb6ae"
      },
      "eu-west-2": {
        
        "Windows2012r2": "ami-738a8017"
      },
      "eu-central-1": {
         "Windows2012r2": "ami-6f559800"
      },
      "ap-northeast-1": {
          "Windows2012r2": "ami-7accbe1d"
      },
      "ap-northeast-2": {
        "Windows2012r2": "ami-e979af87"
      },
      "ap-southeast-1": {
        "Windows2012r2": "ami-89e74cea"
      },
      "ap-southeast-2": {
        "Windows2012r2": "ami-059d9866"
      },
      "ap-south-1": {
        "Windows2012r2": "ami-31a6d05e"
      },
      "us-east-2": {
        "Windows2012r2": "ami-c06d48a5"
      },
      "ca-central-1": {
        
        "Windows2012r2": "ami-7805b71c"
      },
      "sa-east-1": {
        "Windows2012r2": "ami-f4d84298"
      },
      "cn-north-1": {
        "Windows2012r2": "ami-d4ad7ab9"
      }
    }

  },


  "Resources": {
    "VPC": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "InstanceTenancy": "default",
        "EnableDnsSupport": "true",
        "EnableDnsHostnames": "false",
        "Tags": [
          {
            "Key": "Name",
            "Value": {"Fn::Join" : ["-", [{"Ref" : "ApplicationName"},"VPC",{"Ref" : "EnvironmentType"}]]}
          }
        ]
      }
    },
	 "FTPVPC": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "11.0.0.0/16",
        "InstanceTenancy": "default",
        "EnableDnsSupport": "true",
        "EnableDnsHostnames": "false",
        "Tags": [
          {
            "Key": "Name",
            "Value": {"Fn::Join" : ["-", [{"Ref" : "ApplicationName"},"FTPVPC",{"Ref" : "EnvironmentType"}]]}
          }
        ]
      }
    },
	 "FTPPublicSubnet": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "11.0.1.0/24",
        "AvailabilityZone": { "Ref" : "FTPPublicSubnetAZ"},
        "VpcId": {
          "Ref": "FTPVPC"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {"Fn::Join" : ["-", [{"Ref" : "ApplicationName"},"FTPPublicSubnet",{"Ref" : "EnvironmentType"}]]}
          }
        ]
      }
    },
    "PublicSubnet": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.1.0/24",
        "AvailabilityZone": { "Ref" : "PublicSubnetAZ"},
        "VpcId": {
          "Ref": "VPC"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {"Fn::Join" : ["-", [{"Ref" : "ApplicationName"},"PublicSubnet",{"Ref" : "EnvironmentType"}]]}
          }
        ]
      }
    },
    "PrivateSubnet": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.2.0/24",
        "AvailabilityZone": { "Ref" : "PrivateSubnetAZ"},
        "VpcId": {
          "Ref": "VPC"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {"Fn::Join" : ["-", [{"Ref" : "ApplicationName"},"PrivateSubnet",{"Ref" : "EnvironmentType"}]]}
          }
        ]
      }
    },
    "DBPrivateSubnet": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.3.0/24",
         "AvailabilityZone": { "Ref" : "DBPrivateSubnetAZ"},
        "VpcId": {
          "Ref": "VPC"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {"Fn::Join" : ["-", [{"Ref" : "ApplicationName"},"DBPrivateSubnet",{"Ref" : "EnvironmentType"}]]}


          }
        ]
      }
    },
    "InternetGateway": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
           "Value": {"Fn::Join" : ["-", [{"Ref" : "ApplicationName"},"InternetGateway",{"Ref" : "EnvironmentType"}]]}
          }
        ]
      }
    },
	 "FTPInternetGateway": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
           "Value": {"Fn::Join" : ["-", [{"Ref" : "ApplicationName"},"FTPInternetGateway",{"Ref" : "EnvironmentType"}]]}
          }
        ]
      }
    },
    "DHCP": {
      "Type": "AWS::EC2::DHCPOptions",
      "Properties": {
        "DomainNameServers": [
          "AmazonProvidedDNS"
        ],
"Tags": [
          {
            "Key": "Name",
           "Value": {"Fn::Join" : ["-", [{"Ref" : "ApplicationName"},"DHCP",{"Ref" : "EnvironmentType"}]]}
          }
        ]

      }
    },
	    "FTPDHCP": {
      "Type": "AWS::EC2::DHCPOptions",
      "Properties": {
        "DomainNameServers": [
          "AmazonProvidedDNS"
        ],
"Tags": [
          {
            "Key": "Name",
           "Value": {"Fn::Join" : ["-", [{"Ref" : "ApplicationName"},"FTPDHCP",{"Ref" : "EnvironmentType"}]]}
          }
        ]

      }
    },
    "NetworkACL": {
      "Type": "AWS::EC2::NetworkAcl",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
"Tags": [
          {
            "Key": "Name",
           "Value": {"Fn::Join" : ["-", [{"Ref" : "ApplicationName"},"NetworkACL",{"Ref" : "EnvironmentType"}]]}
          }
        ]

      }
    },
	"FTPNetworkACL": {
      "Type": "AWS::EC2::NetworkAcl",
      "Properties": {
        "VpcId": {
          "Ref": "FTPVPC"
        },
"Tags": [
          {
            "Key": "Name",
           "Value": {"Fn::Join" : ["-", [{"Ref" : "ApplicationName"},"FTPNetworkACL",{"Ref" : "EnvironmentType"}]]}
          }
        ]

      }
    },
    "MainRouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
		"Tags": [
          {
            "Key": "Name",
            "Value": {"Fn::Join" : ["-", [{"Ref" : "EnvironmentType"},"MainRouteTable",{"Ref" : "EnvironmentType"}]]}
          }
        ]
      }
    },
	"FTPRouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "FTPVPC"
        },
		"Tags": [
          {
            "Key": "Name",
            "Value": {"Fn::Join" : ["-", [{"Ref" : "EnvironmentType"},"FTPRouteTable",{"Ref" : "EnvironmentType"}]]}
          }
        ]
      }
    },
    "CustomRouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
		"Tags": [
          {
            "Key": "Name",
            "Value": {"Fn::Join" : ["-", [{"Ref" : "EnvironmentType"},"CustomRouteTable",{"Ref" : "EnvironmentType"}]]}
          }
        ]
      }
    },
    "ELB": {
      "Type": "AWS::ElasticLoadBalancing::LoadBalancer",
      "Properties": {
        "Scheme": "internal",
        "Subnets": [
          {
            "Ref": "PrivateSubnet"
          },
          {
            "Ref": "PublicSubnet"
          }
        ],
        "HealthCheck": {
          "HealthyThreshold": "10",
          "Interval": "30",
          "Target": "HTTP:80/",
          "Timeout": "5",
          "UnhealthyThreshold": "2"
        },
        "ConnectionDrainingPolicy": {
          "Enabled": "true",
          "Timeout": "300"
        },
        "ConnectionSettings": {
          "IdleTimeout": "60"
        },
        "CrossZone": "true",
        "Instances": [
          {
            "Ref": "WebTier"
          }
        ],
        "SecurityGroups": [
          {
            "Ref": "SecurityGroupELB"
          }
        ],
        "Listeners": [
          {
            "InstancePort": "80",
            "LoadBalancerPort": "80",
            "Protocol": "HTTP",
            "InstanceProtocol": "HTTP"
          }
        ],
        "Tags": [
          {
            "Key": "Name",
             "Value": {"Fn::Join" : ["-", [{"Ref" : "ApplicationName"},"ELB",{"Ref" : "EnvironmentType"}]]}


          }
        ]
      }
    },
    "NATGateway" : {
           "Type" : "AWS::EC2::NatGateway",                                          
    "Properties" : {
           "AllocationId" : { "Fn::GetAtt" : ["EIP", "AllocationId"]},
           "SubnetId" : { "Ref" : "PublicSubnet"}
     }
},
"EIP" : {
  "Type" : "AWS::EC2::EIP",
  "Properties" : {
    "Domain" : "vpc"
  }
},
"NATGatewayRoute" : {
  "Type" : "AWS::EC2::Route",
  "Properties" : {
    "RouteTableId" : { "Ref" : "MainRouteTable" },
    "DestinationCidrBlock" : "0.0.0.0/0", 
    "NatGatewayId" : { "Ref" : "NATGateway" }
	
  }
},
    "WebTier": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "DisableApiTermination": "false",
        "InstanceInitiatedShutdownBehavior": "stop",

        "ImageId" : { "Fn::FindInMap" : [ "AWSRegionArch2AMI", { "Ref" : "AWS::Region" },"Windows2012r2" ]},

        "InstanceType":{ "Ref" : "InstanceType" },
        "KeyName": { "Ref" : "KeyName" },
        "Monitoring": "false",
"UserData" : { "Fn::Base64" : { "Fn::Join" : ["", [
        "<script>\n",
          "powershell.exe add-windowsfeature web-webserver -includeallsubfeature -logpath $env:temp\\webserver_addrole.log \n",
          "powershell.exe add-windowsfeature web-mgmt-tools -includeallsubfeature -logpath $env:temp\\mgmttools_addrole.log \n",
"</script>\n"
]]}},
        "Tags": [
          {
            "Key": "Name",
            "Value": {"Fn::Join" : ["-", [{"Ref" : "ApplicationName"},"WebTier",{"Ref" : "EnvironmentType"}]]}

          }
        ],
        "NetworkInterfaces": [
          {
            "DeleteOnTermination": "true",
            "Description": "Primary network interface",
            "DeviceIndex": 0,
            "SubnetId": {
              "Ref": "PrivateSubnet"
            },
            "GroupSet": [
              {
                "Ref": "SecurityGroupWebTier"
	  	    
              }
            ]
          }
        ]
      }
    },
	"FTPService": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
	    "UserData" : { "Fn::Base64" : { "Fn::Join" : [ "", [ "FTPServiceIPAddress=", {"Ref" : "FTPServiceIPAddress"}]]}},
        "DisableApiTermination": "false",
		"IamInstanceProfile" : { "Ref" : "FTPInstanceProfile" },
        "InstanceInitiatedShutdownBehavior": "stop",

        "ImageId" : { "Fn::FindInMap" : [ "AWSRegionArch2AMI", { "Ref" : "AWS::Region" },"Windows2012r2" ]},

        "InstanceType":{ "Ref" : "InstanceType" },
        "KeyName": { "Ref" : "KeyName" },
        "Monitoring": "false",
"UserData" : { "Fn::Base64" : { "Fn::Join" : ["", [
        "<script>\n",
          "powershell.exe add-windowsfeature web-webserver -includeallsubfeature -logpath $env:temp\\webserver_addrole.log \n",
          "powershell.exe add-windowsfeature web-mgmt-tools -includeallsubfeature -logpath $env:temp\\mgmttools_addrole.log \n",
"</script>\n"
]]}},
        "Tags": [
          {
            "Key": "Name",
            "Value": {"Fn::Join" : ["-", [{"Ref" : "ApplicationName"},"FTPService",{"Ref" : "EnvironmentType"}]]}

          }
        ],
        "NetworkInterfaces": [
          {
            "DeleteOnTermination": "true",
            "Description": "Primary network interface",
            "DeviceIndex": 0,
            "SubnetId": {
              "Ref": "FTPPublicSubnet"
            },
            "GroupSet": [
              {
                "Ref": "SecurityGroupFTPService"
	  	    
              }
            ]
          }
        ]
      }
    },



    "AppTier": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "DisableApiTermination": "false",
        "InstanceInitiatedShutdownBehavior": "stop",

        

        "ImageId" : { "Fn::FindInMap" : [ "AWSRegionArch2AMI", { "Ref" : "AWS::Region" },"Windows2012r2" ]},


        "InstanceType":{ "Ref" : "InstanceType" },
        "KeyName": { "Ref" : "KeyName" },
        "Monitoring": "false",
"UserData" : { "Fn::Base64" : { "Fn::Join" : ["", [
        "<script>\n",
          "powershell.exe add-windowsfeature web-webserver -includeallsubfeature -logpath $env:temp\\webserver_addrole.log \n",
          "powershell.exe add-windowsfeature web-mgmt-tools -includeallsubfeature -logpath $env:temp\\mgmttools_addrole.log \n",
"</script>\n"
]]}},

        "Tags": [
          {
            "Key": "Name",
            "Value": {"Fn::Join" : ["-", [{"Ref" : "ApplicationName"},"AppTier",{"Ref" : "EnvironmentType"}]]}

          }
        ],
        "NetworkInterfaces": [
          {
            "DeleteOnTermination": "true",
            "Description": "Primary network interface",
            "DeviceIndex": 0,
            "SubnetId": {
              "Ref": "PrivateSubnet"
            },
            "GroupSet": [
              {
                "Ref": "SecurityGroupAppTier"
              }
            ]
          }
        ]
      }
    },


"JumpHost" : {
      "Type" : "AWS::EC2::Instance",
      "Properties" : {
        "UserData" : { "Fn::Base64" : { "Fn::Join" : [ "", [ "JumpHostIPAddress=", {"Ref" : "JumpHostIPAddress"}]]}},
        "InstanceType" : { "Ref" : "InstanceType" },
        "KeyName" : { "Ref" : "KeyName" },

        "ImageId" : { "Fn::FindInMap" : [ "AWSRegionArch2AMI", { "Ref" : "AWS::Region" },"Windows2012r2" ]},



        "Tags": [
          {
            "Key": "Name",
            "Value": {"Fn::Join" : ["-", [{"Ref" : "ApplicationName"},"JumpHost",{"Ref" : "EnvironmentType"}]]}

          }
        ],
        "NetworkInterfaces": [
          {
            "DeleteOnTermination": "true",
            "Description": "Primary network interface",
            "DeviceIndex": 0,
            "SubnetId": {
              "Ref": "PublicSubnet"
            },
        "GroupSet": [
              {
                "Ref": "SecurityGroupJumpHost"
              }
            ]

          }
        ]

      }
    },
    "JumpHostIPAddress" : {
      "Type" : "AWS::EC2::EIP"
    },
	"FTPServiceIPAddress" : {
      "Type" : "AWS::EC2::EIP"
    },

    "JumpHostIPAssoc" : {
      "Type" : "AWS::EC2::EIPAssociation",
      "Properties" : {
        "InstanceId" : { "Ref" : "JumpHost" },
        "EIP" : { "Ref" : "JumpHostIPAddress" }
      }
    },
	"FTPServiceIPAssoc" : {
      "Type" : "AWS::EC2::EIPAssociation",
      "Properties" : {
        "InstanceId" : { "Ref" : "FTPService" },
        "EIP" : { "Ref" : "FTPServiceIPAddress" }
      }
    },

    "RDSMSSQL": {
      "Type": "AWS::RDS::DBInstance",
      "Properties": {
        "AllocatedStorage": "200",
        "AllowMajorVersionUpgrade": "false",
        "AutoMinorVersionUpgrade": "true",
        "DBInstanceClass": { "Ref" : "DBInstanceClass" },
        "DBInstanceIdentifier" : {"Fn::Join" : ["-", [{"Ref" : "ApplicationName"},"RDSMSSQL",{"Ref" : "EnvironmentType"}]]},
        "Port": "1433",
        "BackupRetentionPeriod": "7",
		"StorageType" : "gp2",
        "MasterUsername":  { "Ref" : "DBUsername" },
        "MasterUserPassword":  { "Ref" : "DBPassword" },
        "PreferredBackupWindow": "12:08-12:38",
        "PreferredMaintenanceWindow": "thu:10:50-thu:11:20",
        "Engine": "sqlserver-ee",
        "EngineVersion": "12.00.5000.0.v1",
        "LicenseModel": "license-included",
        "MultiAZ": "false",
		"OptionGroupName":{"Ref": "RDSSQLOptionGroup"},
	    "DBParameterGroupName":{ "Ref": "RDSDBParameterGroup"},
        "DBSubnetGroupName": {"Ref": "RDSSubnetGroup"},
        "VPCSecurityGroups": [
          {
            "Ref": "SecurityGroupRDS"
          }
        ]
      }
    },
	
"RDSSQLOptionGroup": {
  "Type": "AWS::RDS::OptionGroup",
  "Properties": {
    "EngineName": "sqlserver-ee",
    "MajorEngineVersion": "12.00",
    "OptionGroupDescription": "RDS SQL Server EE option group",
    	"Tags": [
          {
            "Key": "Name",
             "Value": {"Fn::Join" : ["-", [{"Ref" : "ApplicationName"},"RDSSQLOptionGroup",{"Ref" : "EnvironmentType"}]]}


          }
        ]
  }
},
"RDSDBParameterGroup": {
  "Type": "AWS::RDS::DBParameterGroup",
  "Properties" : {
    "Description" : "RDS SQL Server EE Parameter Group",
    "Family" : "sqlserver-ee-12.0",
	"Tags": [
          {
            "Key": "Name",
             "Value": {"Fn::Join" : ["-", [{"Ref" : "ApplicationName"},"RDSDBParameterGroup",{"Ref" : "EnvironmentType"}]]}


          }
        ]
   }
},
    "RDSSubnetGroup": {
      "Type": "AWS::RDS::DBSubnetGroup",
      "Properties": {
        "DBSubnetGroupDescription": "RDS SQL SERVER EE Subnet Group",
        "SubnetIds": [
          {
            "Ref": "PrivateSubnet"
          },
          {
            "Ref": "DBPrivateSubnet"
          }
        ],
		"Tags": [
          {
            "Key": "Name",
             "Value": {"Fn::Join" : ["-", [{"Ref" : "ApplicationName"},"RDSSubnetGroup",{"Ref" : "EnvironmentType"}]]}


          }
        ]
      }
    },
	
	"FTPS3Bucket" : {
      "Type" : "AWS::S3::Bucket",
	  "Properties" : {
	   "BucketName" : "ftpbuckt",
	   "Tags" : [
	   {
            "Key": "Name",
             "Value": {"Fn::Join" : ["-", [{"Ref" : "ApplicationName"},"FTPS3Bucket",{"Ref" : "EnvironmentType"}]]}
        } ]
	  }
      },
	  
	  
	  "FTPRole": {
         "Type": "AWS::IAM::Role",
         "Properties": {
            "AssumeRolePolicyDocument": {
               "Version" : "2012-10-17",
               "Statement": [ {
                  "Effect": "Allow",
                  "Principal": {
                     "Service": [ "ec2.amazonaws.com" ]
                  },
                  "Action": [ "sts:AssumeRole" ]
               } ]
            },
            "Path": "/"
         }
      },
      "RolePolicies": {
         "Type": "AWS::IAM::Policy",
         "Properties": {
            "PolicyName": "FTPS3AccessPolicy",
            "PolicyDocument": {
               "Version" : "2012-10-17",
               "Statement": [ {
                  "Effect": "Allow",
                  "Action": "s3:*",
                  "Resource": "arn:aws:s3:::ftpbuckt"
               } ]
            },
            "Roles": [ {
               "Ref": "FTPRole"
            } ]
         },
		 "DependsOn" : "FTPS3Bucket"
      },
      "FTPInstanceProfile": {
         "Type": "AWS::IAM::InstanceProfile",
         "Properties": {
            "Path": "/",
            "Roles": [ {
               "Ref": "FTPRole"
            } ]
         }
      },
	  
	  
	  
    "SecurityGroupWebTier": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Windows Instance Security Group",
		"GroupName": "SecurityGroupWebTier",
        "VpcId": {
          "Ref": "VPC"
        },
		"Tags": [
          {
            "Key": "Name",
             "Value": {"Fn::Join" : ["-", [{"Ref" : "ApplicationName"},"SecurityGroupWebTier",{"Ref" : "EnvironmentType"}]]}


          }
        ]
      }
    },
	 "SecurityGroupFTPService": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "FTPService Instance Security Group",
		"GroupName": "SecurityGroupFTPService",
        "VpcId": {
          "Ref": "FTPVPC"
        },
		"Tags": [
          {
            "Key": "Name",
             "Value": {"Fn::Join" : ["-", [{"Ref" : "ApplicationName"},"SecurityGroupFTPService",{"Ref" : "EnvironmentType"}]]}


          }
        ]
      }
    },
"SecurityGroupJumpHost": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Bastion Host Security Group",
		"GroupName": "SecurityGroupJumpHost",
        "VpcId": {
          "Ref": "VPC"
        },
		"Tags": [
          {
            "Key": "Name",
             "Value": {"Fn::Join" : ["-", [{"Ref" : "ApplicationName"},"SecurityGroupJumpHost",{"Ref" : "EnvironmentType"}]]}


          }
        ]
      }
    },

"SecurityGroupAppTier": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "App Tier Security Group",
		"GroupName": "SecurityGroupAppTier",
        "VpcId": {
          "Ref": "VPC"
        },
		"Tags": [
          {
            "Key": "Name",
             "Value": {"Fn::Join" : ["-", [{"Ref" : "ApplicationName"},"SecurityGroupAppTier",{"Ref" : "EnvironmentType"}]]}


          }
        ]
      }
    },

    "SecurityGroupELB": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "ELBSecurityGroup",
		"GroupName": "SecurityGroupELB",
        "VpcId": {
          "Ref": "VPC"
        },
		"Tags": [
          {
            "Key": "Name",
            "Value": {"Fn::Join" : ["-", [{"Ref" : "ApplicationName"},"SecurityGroupELB",{"Ref" : "EnvironmentType"}]]}
          }
        ]
      }
    },
    "SecurityGroupRDS": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "RDS Management",
		"GroupName": "SecurityGroupRDS",
        "VpcId": {
          "Ref": "VPC"
        },
		"Tags": [
          {
            "Key": "Name",
            "Value": {"Fn::Join" : ["-", [{"Ref" : "ApplicationName"},"SecurityGroupRDS",{"Ref" : "EnvironmentType"}]]}
          }
        ]
      }
    },
    "NetworkACLOutboundRule": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "0.0.0.0/0",
        "Egress": "true",
        "Protocol": "-1",
        "RuleAction": "allow",
        "RuleNumber": "100",
        "NetworkAclId": {
          "Ref": "NetworkACL"
        }
      }
    },
	  "FTPNetworkACLOutboundRule": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "0.0.0.0/0",
        "Egress": "true",
        "Protocol": "-1",
        "RuleAction": "allow",
        "RuleNumber": "100",
        "NetworkAclId": {
          "Ref": "FTPNetworkACL"
        }
      }
    },
    "NetworkACLInboundRule": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "0.0.0.0/0",
        "Protocol": "-1",
        "RuleAction": "allow",
        "RuleNumber": "100",
        "NetworkAclId": {
          "Ref": "NetworkACL"
        }
      }
    },
	"FTPNetworkACLInboundRule": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "0.0.0.0/0",
        "Protocol": "-1",
        "RuleAction": "allow",
        "RuleNumber": "100",
        "NetworkAclId": {
          "Ref": "FTPNetworkACL"
        }
      }
    },
    "AppPrivateSubnetAssociation": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "NetworkACL"
        },
        "SubnetId": {
          "Ref": "PrivateSubnet"
        }
      }
    },
    "DBPrivateSubnetAssociation": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "NetworkACL"
        },
        "SubnetId": {
          "Ref": "DBPrivateSubnet"
        }
      }
    },
    "WebPublicSubnetAssociation": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "NetworkACL"
        },
        "SubnetId": {
          "Ref": "PublicSubnet"
        }
      }
    },
	"FTPServiceSubnetAssociation": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "FTPNetworkACL"
        },
        "SubnetId": {
          "Ref": "FTPPublicSubnet"
        }
      }
    },
    "AttachInternetGatewayInVPC": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "InternetGatewayId": {
          "Ref": "InternetGateway"
        }
      }
    },
	"AttachInternetGatewayInFTPVPC": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "FTPVPC"
        },
        "InternetGatewayId": {
          "Ref": "FTPInternetGateway"
        }
      }
    },
    "MainRouteTableDBPrivateSubnetAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "MainRouteTable"
        },
        "SubnetId": {
          "Ref": "DBPrivateSubnet"
        }
      }
    },
    "MainRouteTableAppPrivateSubnetAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "MainRouteTable"
        },
        "SubnetId": {
          "Ref": "PrivateSubnet"
        }
      }
    },
	"FTPRouteTablePublicSubnetAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "FTPRouteTable"
        },
        "SubnetId": {
          "Ref": "FTPPublicSubnet"
        }
      }
    },
    "CustomRouteTableWebPublicSubnetAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "CustomRouteTable"
        },
        "SubnetId": {
          "Ref": "PublicSubnet"
        }
      }
    },
    "MainRouteTableRoutes": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "RouteTableId": {
          "Ref": "MainRouteTable"
        },
   "NatGatewayId": { "Ref": "NATGateway"
        }
      },
 "DependsOn" : "AttachInternetGatewayInVPC"
    },
    "CustomRouteTableRoutes": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "RouteTableId": {
          "Ref": "CustomRouteTable"
        },
        "GatewayId": {
          "Ref": "InternetGateway"
        }
      },
      "DependsOn": "AttachInternetGatewayInVPC"
    },
	  "FTPRouteTableRoutes": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "RouteTableId": {
          "Ref": "FTPRouteTable"
        },
        "GatewayId": {
          "Ref": "FTPInternetGateway"
        }
      },
      "DependsOn": "AttachInternetGatewayInFTPVPC"
    },
    "VPCDHCPAssociation": {
      "Type": "AWS::EC2::VPCDHCPOptionsAssociation",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "DhcpOptionsId": {
          "Ref": "DHCP"
        }
      }
    },
	"FTPVPCDHCPAssociation": {
      "Type": "AWS::EC2::VPCDHCPOptionsAssociation",
      "Properties": {
        "VpcId": {
          "Ref": "FTPVPC"
        },
        "DhcpOptionsId": {
          "Ref": "FTPDHCP"
        }
      }
    },

"InboundRule1JumpHost": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "SecurityGroupJumpHost"
        },
        "IpProtocol": "tcp",
        "FromPort": "3389",
        "ToPort": "3389",
       "CidrIp": { "Ref" : "JumpHostRDP"}
      }
    },
"InboundRule1FTPService": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "SecurityGroupFTPService"
        },
        "IpProtocol": "tcp",
        "FromPort": "3389",
        "ToPort": "3389",
       "CidrIp": { "Ref" : "JumpHostRDP"}
      }
    },

"InboundRule1AppTier": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "SecurityGroupAppTier"
        },
        "IpProtocol": "tcp",
        "FromPort": "80",
        "ToPort": "80",
       "SourceSecurityGroupId" : { "Ref" : "SecurityGroupWebTier" }

      }
    },

"InboundRule2AppTier": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "SecurityGroupAppTier"
        },
        "IpProtocol": "tcp",
        "FromPort": "443",
        "ToPort": "443",
       "SourceSecurityGroupId" : { "Ref" : "SecurityGroupWebTier" }

      }
    },
"InboundRule3AppTier": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "SecurityGroupAppTier"
        },
        "IpProtocol": "tcp",
        "FromPort": "3389",
        "ToPort": "3389",
       "SourceSecurityGroupId" : { "Ref" : "SecurityGroupWebTier" }

      }
    },



    "InboundRule1WebTier": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "SecurityGroupWebTier"
        },
        "IpProtocol": "tcp",
        "FromPort": "80",
        "ToPort": "80",
        "SourceSecurityGroupId" : { "Ref" : "SecurityGroupELB" }
      }
    },
    "InboundRule2WebTier": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "SecurityGroupWebTier"
        },
        "IpProtocol": "tcp",
        "FromPort": "3389",
        "ToPort": "3389",
         "SourceSecurityGroupId" : { "Ref" : "SecurityGroupJumpHost" }

      }
    },
 
    "InboundRule3WebTier": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "SecurityGroupWebTier"
        },
        "IpProtocol": "tcp",
        "FromPort": "443",
        "ToPort": "443",
        "SourceSecurityGroupId" : { "Ref" : "SecurityGroupELB" }
      }
    },
    "InboundRule1ELB": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "SecurityGroupELB"
        },
        "IpProtocol": "tcp",
        "FromPort": "80",
        "ToPort": "80",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "InboundRule2ELB": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "SecurityGroupELB"
        },
        "IpProtocol": "tcp",
        "FromPort": "443",
        "ToPort": "443",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "InboundRule1RDS": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "SecurityGroupRDS"
        },
        "IpProtocol": "tcp",
        "FromPort": "1433",
        "ToPort": "1433",
        "SourceSecurityGroupId" : { "Ref" : "SecurityGroupWebTier" }

      }
    },

"InboundRule2RDS": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "SecurityGroupRDS"
        },
        "IpProtocol": "tcp",
        "FromPort": "1433",
        "ToPort": "1433",
        "SourceSecurityGroupId" : { "Ref" : "SecurityGroupAppTier" }

      }
    },

    "OutboundRuleWebTier": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "SecurityGroupWebTier"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
"OutboundRuleJumpHost": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "SecurityGroupJumpHost"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
	"OutboundRuleFTPService": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "SecurityGroupFTPService"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },

    "OutboundRuleELB": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "SecurityGroupELB"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "OutboundRuleRDS": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "SecurityGroupRDS"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    }
  },
 "Outputs" : {
    "JumpHostIPAddress" : {
      "Description" : "IP address of the newly created Bastion instance",
      "Value" : { "Ref" : "JumpHostIPAddress" }
    },
	"BucketName": {
            "Value": {
                "Ref": "FTPS3Bucket"
            },
            "Description": "Name of the Amazon S3 Bucket"
        },
	"FTPServiceIPAddress" : {
      "Description" : "IP address of the newly created FTPService instance",
      "Value" : { "Ref" : "FTPServiceIPAddress" }
    }
  },
  "Description": "Proposed Infrastructure Setup for Any Application"
}